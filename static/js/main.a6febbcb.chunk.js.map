{"version":3,"sources":["components/Navbar.js","components/Jumbotron.js","components/Character.js","components/Wrapper.js","App.js","index.js"],"names":["styles","RowStyle","width","ColStyle","textAlign","Navbar","props","className","style","score","topScore","Jumbotron","imgStyle","height","padding","background","borderRadius","marginBottom","Character","alt","src","process","bg","onClick","shuffle","id","Wrapper","App","state","clickedCharacter","characters","shuffleCharacters","newScore","Shuffled","i","length","j","Math","floor","random","temp","setState","console","log","this","map","character","img","key","Component","ReactDOM","render","document","getElementById"],"mappings":"kMACMA,EAAS,CACbC,SAAU,CACRC,MAAO,QAETC,SAAU,CACRC,UAAW,WAqBAC,MAlBf,SAAgBC,GACd,OACE,yBAAKC,UAAU,2DACb,yBAAKA,UAAU,MAAMC,MAAOR,EAAOC,UACjC,yBAAKM,UAAU,MAAMC,MAAOR,EAAOG,UAAnC,eAGA,yBAAKI,UAAU,MAAMC,MAAOR,EAAOG,UAAnC,UACUG,EAAMG,OAEhB,yBAAKF,UAAU,MAAMC,MAAOR,EAAOG,UAAnC,cACcG,EAAMI,aCVbC,MARf,WACE,OACE,yBAAKJ,UAAU,yBACb,wBAAIA,UAAU,aAAd,8BCJAP,EAAS,CACbY,SAAU,CACRV,MAAO,QACPW,OAAQ,QACRC,QAAS,OACTC,WAAY,YACZC,aAAc,OACdC,aAAc,SAgBHC,MAbf,SAAmBZ,GACjB,OACE,yBAAKC,UAAU,oDACb,yBACEC,MAAOR,EAAOY,SACdO,IAAI,eACJC,IAAG,UAAKC,qBAAL,OAA8Bf,EAAMgB,IACvCC,QAAS,kBAAMjB,EAAMkB,QAAQlB,EAAMmB,SCR5BC,MARf,SAAiBpB,GACf,OACE,yBAAKC,UAAU,aACb,uCAAKA,UAAU,8BAAiCD,M,OC2DvCqB,E,4MAxDbC,MAAQ,CACNC,iBAAkB,GAClBC,aACArB,MAAO,EACPC,SAAU,G,EAGZqB,kBAAoB,SAACN,GAGnB,IAFA,IAAIO,EAAW,EAAKJ,MAAMnB,MACtBwB,EAAW,EAAKL,MAAME,WACjBI,EAAID,EAASE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC5C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,SAAWL,GAC/BM,EAAOP,EAASC,GACtBD,EAASC,GAAKD,EAASG,GACvBH,EAASG,GAAKI,EAGZ,EAAKZ,MAAMC,mBACTJ,IAAO,EAAKG,MAAMC,iBACpBG,IAEAA,EAAW,GAGf,EAAKS,SACH,CACEZ,iBAAkBJ,EAClBK,WAAYG,EACZxB,MAAOuB,EACPtB,SACEsB,EAAW,EAAKJ,MAAMlB,SAAWsB,EAAW,EAAKJ,MAAMlB,WAE3D,kBAAMgC,QAAQC,IAAI,EAAKf,MAAMnB,W,uDAIvB,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAAQA,MAAOmC,KAAKhB,MAAMnB,MAAOC,SAAUkC,KAAKhB,MAAMlB,WACtD,kBAAC,EAAD,MACA,kBAAC,EAAD,KACGkC,KAAKhB,MAAME,WAAWe,KAAI,SAACC,GAAD,OACzB,kBAAC,EAAD,CACExB,GAAIwB,EAAUC,IACdC,IAAKF,EAAUrB,GACfA,GAAIqB,EAAUrB,GACdD,QAAS,EAAKO,6B,GAhDVkB,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a6febbcb.chunk.js","sourcesContent":["import React from \"react\";\r\nconst styles = {\r\n  RowStyle: {\r\n    width: \"100%\",\r\n  },\r\n  ColStyle: {\r\n    textAlign: \"center\",\r\n  },\r\n};\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\r\n      <div className=\"row\" style={styles.RowStyle}>\r\n        <div className=\"col\" style={styles.ColStyle}>\r\n          Clicky Game\r\n        </div>\r\n        <div className=\"col\" style={styles.ColStyle}>\r\n          Score: {props.score}\r\n        </div>\r\n        <div className=\"col\" style={styles.ColStyle}>\r\n          Top Score: {props.topScore}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron text-center\">\r\n      <h1 className=\"display-2\">Click an image to begin!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nconst styles = {\r\n  imgStyle: {\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n    padding: \"10px\",\r\n    background: \"lightgrey\",\r\n    borderRadius: \"10px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n};\r\nfunction Character(props) {\r\n  return (\r\n    <div className=\"col-md-3 col-lg-3 col-xm-12 col-sm-6 text-center\">\r\n      <img\r\n        style={styles.imgStyle}\r\n        alt=\"characterImg\"\r\n        src={`${process.env.PUBLIC_URL}${props.bg}`}\r\n        onClick={() => props.shuffle(props.id)}\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\n\r\nfunction Wrapper(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\" {...props}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Character from \"./components/Character\";\nimport Wrapper from \"./components/Wrapper\";\nimport characters from \"./characters.json\";\n\nclass App extends Component {\n  state = {\n    clickedCharacter: \"\",\n    characters,\n    score: 0,\n    topScore: 0,\n  };\n\n  shuffleCharacters = (id) => {\n    let newScore = this.state.score;\n    let Shuffled = this.state.characters;\n    for (let i = Shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = Shuffled[i];\n      Shuffled[i] = Shuffled[j];\n      Shuffled[j] = temp;\n    }\n\n    if (this.state.clickedCharacter) {\n      if (id !== this.state.clickedCharacter) {\n        newScore++;\n      } else {\n        newScore = 0;\n      }\n    }\n    this.setState(\n      {\n        clickedCharacter: id,\n        characters: Shuffled,\n        score: newScore,\n        topScore:\n          newScore > this.state.topScore ? newScore : this.state.topScore,\n      },\n      () => console.log(this.state.score)\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} topScore={this.state.topScore} />\n        <Jumbotron />\n        <Wrapper>\n          {this.state.characters.map((character) => (\n            <Character\n              bg={character.img}\n              key={character.id}\n              id={character.id}\n              shuffle={this.shuffleCharacters}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}