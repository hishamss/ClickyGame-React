{"version":3,"sources":["components/Navbar.js","components/Jumbotron.js","components/Character/index.js","components/Wrapper/index.js","components/Winning/index.js","App.js","index.js"],"names":["styles","navbarStyle","background","opacity","color","RowStyle","width","ColStyle","textAlign","Navbar","props","className","style","score","topScore","jumboStyles","backgroundColor","backgroundImage","process","backgroundPosition","backgroundSize","backgroundRepeat","height","marginBottom","Jumbotron","Character","alt","src","bg","onClick","shuffle","id","Wrapper","console","log","shake","children","Winning","show","App","state","clickedCharacters","characters","win","shuffleCharacters","updatedClicked","newScore","Shuffled","shakeValue","checkIfWin","i","length","j","Math","floor","random","temp","includes","push","setState","this","map","character","img","key","Component","ReactDOM","render","document","getElementById"],"mappings":"0zBACMA,EAAS,CACbC,YAAa,CAEXC,WAAY,UACZC,QAAS,IACTC,MAAO,SAETC,SAAU,CACRC,MAAO,QAETC,SAAU,CACRC,UAAW,WA0BAC,MAvBf,SAAgBC,GACd,OACE,yBACEC,UAAU,8CACVC,MAAOZ,EAAOC,aAEd,yBAAKU,UAAU,MAAMC,MAAOZ,EAAOK,UACjC,yBAAKM,UAAU,MAAMC,MAAOZ,EAAOO,UACjC,4CAEF,yBAAKI,UAAU,MAAMC,MAAOZ,EAAOO,UACjC,0DAEF,yBAAKI,UAAU,MAAMC,MAAOZ,EAAOO,UACjC,sCACUG,EAAMG,MADhB,iBACqCH,EAAMI,cC7B/Cd,EAAS,CACbe,YAAa,CACXC,gBAAiB,UACjBC,gBAAgB,OAAD,OAASC,oBAAT,gCACfC,mBAAoB,SACpBC,eAAgB,MAChBC,iBAAkB,YAClBC,OAAQ,QACRC,aAAc,IASHC,MANf,WACE,OACE,yBAAKb,UAAU,wBAAwBC,MAAOZ,EAAOe,e,MCC1CU,MAZf,SAAmBf,GACjB,OACE,yBAAKC,UAAU,oDACb,yBACEe,IAAI,eACJC,IAAG,UAAKT,qBAAL,OAA8BR,EAAMkB,IACvCC,QAAS,kBAAMnB,EAAMoB,QAAQpB,EAAMqB,S,MCE5BC,MATf,SAAiBtB,GAEf,OADAuB,QAAQC,IAAI,QAASxB,EAAMyB,OAEzB,yBAAKxB,UAAS,oBAAeD,EAAMyB,MAAQ,QAAU,KACnD,yBAAKxB,UAAU,8BAA8BD,EAAM0B,Y,MCC1CC,MAJf,YAA4B,IAATC,EAAQ,EAARA,KACjB,OAAO,wBAAI3B,UAAW2B,EAAO,UAAY,QAAlC,e,OC4EMC,E,4MAvEbC,MAAQ,CACNC,kBAAmB,GACnBC,aACA7B,MAAO,EACPC,SAAU,EACVqB,OAAO,EACPQ,KAAK,G,EAGPC,kBAAoB,SAACb,GAMnB,IALA,IAAIc,EAAiB,EAAKL,MAAMC,kBAC5BK,EAAW,EAAKN,MAAM3B,MACtBkC,EAAW,EAAKP,MAAME,WACtBM,GAAa,EACbC,GAAa,EACRC,EAAIH,EAASI,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC5C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,SAAWL,GAC/BM,EAAOT,EAASG,GACtBH,EAASG,GAAKH,EAASK,GACvBL,EAASK,GAAKI,EAGZ,EAAKhB,MAAM3B,OAAS,IACtBiC,EAAW,EACXD,EAAiB,IAEZ,EAAKL,MAAMC,kBAAkBgB,SAAS1B,IAKzCe,EAAW,EACXE,GAAa,EACbH,EAAiB,KANjBA,EAAea,KAAK3B,KACpBe,GACgB,KAAIG,GAAa,IAOrC,EAAKU,SACH,CACElB,kBAAmBI,EACnBH,WAAYK,EACZlC,MAAOiC,EACPhC,SACEgC,EAAW,EAAKN,MAAM1B,SAAWgC,EAAW,EAAKN,MAAM1B,SACzDqB,MAAOa,EACPL,IAAKM,IAEP,kBAAMhB,QAAQC,IAAI,EAAKM,MAAMC,uB,uDAIvB,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAAQ5B,MAAO+C,KAAKpB,MAAM3B,MAAOC,SAAU8C,KAAKpB,MAAM1B,WACtD,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASqB,MAAOyB,KAAKpB,MAAML,OACzB,kBAAC,EAAD,CAASG,KAAMsB,KAAKpB,MAAMG,MACzBiB,KAAKpB,MAAME,WAAWmB,KAAI,SAACC,GAAD,OACzB,kBAAC,EAAD,CACElC,GAAIkC,EAAUC,IACdC,IAAKF,EAAU/B,GACfA,GAAI+B,EAAU/B,GACdD,QAAS,EAAKc,6B,GA/DVqB,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.40ab89c8.chunk.js","sourcesContent":["import React from \"react\";\r\nconst styles = {\r\n  navbarStyle: {\r\n    // background: \"#0099d8\",\r\n    background: \"#265aa7\",\r\n    opacity: 0.95,\r\n    color: \"white\",\r\n  },\r\n  RowStyle: {\r\n    width: \"100%\",\r\n  },\r\n  ColStyle: {\r\n    textAlign: \"center\",\r\n  },\r\n};\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-lg fixed-top shadow-lg\"\r\n      style={styles.navbarStyle}\r\n    >\r\n      <div className=\"row\" style={styles.RowStyle}>\r\n        <div className=\"col\" style={styles.ColStyle}>\r\n          <h1>Clicky Game</h1>\r\n        </div>\r\n        <div className=\"col\" style={styles.ColStyle}>\r\n          <h1>Click an Image to begin!!</h1>\r\n        </div>\r\n        <div className=\"col\" style={styles.ColStyle}>\r\n          <h1>\r\n            Score: {props.score} | Top Score: {props.topScore}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nconst styles = {\r\n  jumboStyles: {\r\n    backgroundColor: \"#f9c741\",\r\n    backgroundImage: `url(${process.env.PUBLIC_URL}/assets/images/jumboBG1.jpg)`,\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"50%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    height: \"400px\",\r\n    marginBottom: 0,\r\n  },\r\n};\r\nfunction Jumbotron() {\r\n  return (\r\n    <div className=\"jumbotron text-center\" style={styles.jumboStyles}></div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Character(props) {\r\n  return (\r\n    <div className=\"col-md-3 col-lg-3 col-xm-12 col-sm-6 text-center\">\r\n      <img\r\n        alt=\"characterImg\"\r\n        src={`${process.env.PUBLIC_URL}${props.bg}`}\r\n        onClick={() => props.shuffle(props.id)}\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nfunction Wrapper(props) {\r\n  console.log(\"shake\", props.shake);\r\n  return (\r\n    <div className={`container ${props.shake ? \"shake\" : \"\"}`}>\r\n      <div className=\"row justify-content-center\">{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Winning({ show }) {\r\n  return <h1 className={show ? \"winning\" : \"hide\"}>You Won!!!</h1>;\r\n}\r\n\r\nexport default Winning;\r\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Character from \"./components/Character\";\nimport Wrapper from \"./components/Wrapper\";\nimport Winning from \"./components/Winning\";\nimport characters from \"./characters.json\";\n\nclass App extends Component {\n  state = {\n    clickedCharacters: [],\n    characters,\n    score: 0,\n    topScore: 0,\n    shake: false,\n    win: false,\n  };\n\n  shuffleCharacters = (id) => {\n    let updatedClicked = this.state.clickedCharacters;\n    let newScore = this.state.score;\n    let Shuffled = this.state.characters;\n    let shakeValue = false;\n    let checkIfWin = false;\n    for (let i = Shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = Shuffled[i];\n      Shuffled[i] = Shuffled[j];\n      Shuffled[j] = temp;\n    }\n\n    if (this.state.score >= 12) {\n      newScore = 1;\n      updatedClicked = [];\n    } else {\n      if (!this.state.clickedCharacters.includes(id)) {\n        updatedClicked.push(id);\n        newScore++;\n        if (newScore >= 12) checkIfWin = true;\n      } else {\n        newScore = 0;\n        shakeValue = true;\n        updatedClicked = [];\n      }\n    }\n    this.setState(\n      {\n        clickedCharacters: updatedClicked,\n        characters: Shuffled,\n        score: newScore,\n        topScore:\n          newScore > this.state.topScore ? newScore : this.state.topScore,\n        shake: shakeValue,\n        win: checkIfWin,\n      },\n      () => console.log(this.state.clickedCharacters)\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} topScore={this.state.topScore} />\n        <Jumbotron />\n        <Wrapper shake={this.state.shake}>\n          <Winning show={this.state.win} />\n          {this.state.characters.map((character) => (\n            <Character\n              bg={character.img}\n              key={character.id}\n              id={character.id}\n              shuffle={this.shuffleCharacters}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}